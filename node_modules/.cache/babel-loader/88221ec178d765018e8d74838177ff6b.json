{"ast":null,"code":"var _jsxFileName = \"/home/anupam/Desktop/altcampus/reactjs/tic-tac-toe/src/components/App.js\";\nimport React from \"react\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = index => {\n      let newBoard = this.state.board;\n\n      if (this.state.board[index] === null) {\n        newBoard[index] = this.state.player;\n        this.setState({\n          board: newBoard,\n          player: this.state.player === \"X\" ? \"O\" : \"X\"\n        });\n      }\n    };\n\n    this.state = {\n      board: Array(9).fill(null),\n      player: \"X\"\n    };\n  }\n\n  checkWinner() {\n    let winLines = [[\"0\", \"1\", \"2\"][(\"3\", \"4\", \"5\")][(\"6\", \"7\", \"8\")]];\n  }\n\n  render() {\n    const myBox = this.state.board.map((box, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      key: index,\n      onClick: () => this.handleClick(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, box));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Tic Tac Toe App\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, myBox));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/anupam/Desktop/altcampus/reactjs/tic-tac-toe/src/components/App.js"],"names":["React","App","Component","constructor","props","handleClick","index","newBoard","state","board","player","setState","Array","fill","checkWinner","winLines","render","myBox","map","box"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkBnBC,WAlBmB,GAkBJC,KAAD,IAAW;AACvB,UAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,KAA1B;;AACA,UAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBH,KAAjB,MAA2B,IAA9B,EAAmC;AACjCC,QAAAA,QAAQ,CAACD,KAAD,CAAR,GAAkB,KAAKE,KAAL,CAAWE,MAA7B;AACA,aAAKC,QAAL,CAAc;AACZF,UAAAA,KAAK,EAAEF,QADK;AAEZG,UAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MAAX,KAAsB,GAAtB,GAA4B,GAA5B,GAAiC;AAF7B,SAAd;AAID;AAEF,KA5BkB;;AAEjB,SAAKF,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEG,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADI;AAEXH,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAEDI,EAAAA,WAAW,GAAE;AACX,QAAIC,QAAQ,GACZ,CACE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,GACC,KAAK,GAAL,EAAU,GADX,IAEC,KAAK,GAAL,EAAU,GAFX,EADF,CADA;AAOD;;AAaDC,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKT,KAAL,CAAWC,KAAX,CAAiBS,GAAjB,CAAqB,CAACC,GAAD,EAAMb,KAAN,kBACjC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,GAAG,EAAEA,KAA1B;AAAiC,MAAA,OAAO,EAAE,MAAK,KAAKD,WAAL,CAAiBC,KAAjB,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGa,GADH,CADY,CAAd;AAKA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBF,KAAxB,CAFF,CADF;AAMD;;AA1C+B;;AA6ClC,eAAehB,GAAf","sourcesContent":["import React from \"react\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: Array(9).fill(null),\n      player: \"X\",\n    };\n  }\n\n  checkWinner(){\n    let winLines =\n    [\n      [\"0\", \"1\", \"2\"]\n      [\"3\", \"4\", \"5\"]\n      [\"6\", \"7\", \"8\"]\n\n    ]\n  }\n\n  handleClick = (index) => {\n    let newBoard = this.state.board;\n    if(this.state.board[index]=== null){\n      newBoard[index] = this.state.player;\n      this.setState({\n        board: newBoard,\n        player: this.state.player === \"X\" ? \"O\": \"X\",\n      });\n    }\n\n  };\n  render() {\n    const myBox = this.state.board.map((box, index) => (\n      <div className=\"box\" key={index} onClick={()=> this.handleClick(index)}>\n        {box}\n      </div>\n    ));\n    return (\n      <div className=\"container\">\n        <h1>Tic Tac Toe App</h1>\n        <div className=\"board\">{myBox}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}